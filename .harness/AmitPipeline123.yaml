pipeline:
  name: AmitPipelineTest456
  identifier: AmitTest123
  projectIdentifier: DoNotDelete_CD_Static_Schema_Signoff
  orgIdentifier: Ng_Pipelines_K8s_Organisations
  tags: {}
  stages:
    - stage:
        name: ASG Template
        identifier: ASG
        description: ""
        type: Deployment
        spec:
          deploymentType: Asg
          service:
            serviceRef: service1
          environment:
            environmentRef: test_env
            deployToAll: false
            infrastructureDefinitions:
              - identifier: non_prod
                inputs:
                  identifier: non_prod
                  type: Asg
                  spec:
                    connectorRef: <+input>
                    region: <+input>
          execution:
            steps:
              - step:
                  name: asg_blue_green_swap_service_
                  identifier: asg_blue_green_swap_service_
                  template:
                    templateRef: asg_blue_green_swap_service_ar7
                    versionLabel: v1
                    templateInputs:
                      type: AsgBlueGreenSwapService
                      spec:
                        downsizeOldAsg: <+input>
              - step:
                  name: ASG Canary Delete
                  identifier: ASG_Canary_Delete
                  template:
                    templateRef: ASG_Canary_Delete
                    versionLabel: "1"
              - step:
                  name: ASG Canary Deploy
                  identifier: ASG_Canary_Deploy
                  template:
                    templateRef: Asg_template1
                    versionLabel: "1"
                    templateInputs:
                      type: AsgCanaryDeploy
                      timeout: <+input>
                      spec:
                        instanceSelection:
                          type: Count
                          spec:
                            count: <+input>
              - step:
                  name: ASG Blue Green Rollback
                  identifier: ASG_Blue_Green_Rollback
                  template:
                    templateRef: Asg_templatename2
                    versionLabel: "1"
              - step:
                  name: ASG Rolling Rollback
                  identifier: ASG_Rolling_Rollback
                  template:
                    templateRef: ASG_Rolling_Rollback
                    versionLabel: "1"
              - step:
                  name: ASG Rolling Deploy
                  identifier: ASG_Rolling_Deploy
                  template:
                    templateRef: ASG_Rolling_Deploy
                    versionLabel: "1"
                    templateInputs:
                      type: AsgRollingDeploy
                      timeout: <+input>
              - step:
                  name: ASG Blue Green Deploy Step
                  identifier: ASG_Blue_Green_Deploy_Step
                  template:
                    templateRef: ASG_Blue_Green_Deploy1
                    versionLabel: "1"
                    templateInputs:
                      type: AsgBlueGreenDeploy
                      timeout: <+input>
                      spec:
                        loadBalancer: <+input>
                        prodListener: <+input>
                        prodListenerRuleArn: <+input>
                        stageListener: <+input>
                        stageListenerRuleArn: <+input>
            rollbackSteps: []
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: MarkAsSuccess
    - stage:
        name: GitOps
        identifier: GitOps
        description: ""
        type: Deployment
        spec:
          deploymentType: Kubernetes
          gitOpsEnabled: true
          service:
            serviceRef: gitops_service_ar7
          execution:
            steps:
              - step:
                  type: GitOpsUpdateReleaseRepo
                  name: Update Release Repo
                  identifier: updateReleaseRepo
                  timeout: 10m
                  spec: {}
              - step:
                  type: MergePR
                  name: Merge PR
                  identifier: mergePR
                  spec:
                    deleteSourceBranch: true
                  timeout: 10m
              - step:
                  type: GitOpsFetchLinkedApps
                  name: Fetch Linked Apps
                  identifier: fetchLinkedApps
                  timeout: 10m
                  spec: {}
              - step:
                  name: Merge PR
                  identifier: Merge_PR
                  template:
                    templateRef: GitOps_Merge_PR_AR7
                    versionLabel: v1
              - step:
                  name: Fetch Linked Apps
                  identifier: Fetch_Linked_Apps
                  template:
                    templateRef: GitOps_Fetch_Linked_Apps_temp_ar7
                    versionLabel: v1
              - step:
                  name: Update ReleaseRepo
                  identifier: Update_ReleaseRepo
                  template:
                    templateRef: GitOps_Update_Release_Repo_AR7
                    versionLabel: v1
              - step:
                  name: GitOpsSync
                  identifier: GitOpsSync
                  template:
                    templateRef: GitOps_Sync_AR7
                    versionLabel: v1
                    gitBranch: main
            rollbackSteps: []
          environment:
            environmentRef: test_env
            deployToAll: true
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
        gitOpsEnabled: true
    - stage:
        name: Terragrunt
        identifier: Terragrunt
        description: ""
        type: Deployment
        spec:
          deploymentType: Kubernetes
          service:
            serviceRef: k8s_svc
          environment:
            environmentRef: test_env
            deployToAll: false
            infrastructureDefinitions:
              - identifier: dummy_infra
                inputs:
                  identifier: dummy_infra
                  type: KubernetesDirect
                  spec:
                    connectorRef: <+input>
                    namespace: <+input>
          execution:
            steps:
              - step:
                  name: Terragrunt Plan
                  identifier: Terragrunt_Plan
                  template:
                    templateRef: terragrunt_temp_ar7
                    versionLabel: v1
                    templateInputs:
                      type: TerragruntPlan
                      spec:
                        configuration:
                          configFiles:
                            store:
                              type: Git
                              spec:
                                connectorRef: <+input>
                                repoName: <+input>
                                branch: <+input>
                                folderPath: <+input>
                          moduleConfig:
                            path: <+input>
                          secretManagerRef: <+input>
                        provisionerIdentifier: <+input>
              - step:
                  name: Terragrunt Rollback
                  identifier: Terragrunt_Rollback
                  template:
                    templateRef: Terragrunt_Rollback_temp_ar7
                    versionLabel: v1
                    templateInputs:
                      type: TerragruntRollback
                      spec:
                        provisionerIdentifier: <+input>
              - step:
                  name: Terragrunt Destroy
                  identifier: Terragrunt_Destroy
                  template:
                    templateRef: Terragrunt_Destroy_TEMP_AR7
                    versionLabel: v1
                    templateInputs:
                      type: TerragruntDestroy
                      spec:
                        provisionerIdentifier: <+input>
              - step:
                  name: Terragrunt Apply
                  identifier: Terragrunt_Apply
                  template:
                    templateRef: Terragrunt_Apply_temp_ar7
                    versionLabel: v1
                    templateInputs:
                      type: TerragruntApply
                      spec:
                        configuration:
                          type: Inline
                          spec:
                            configFiles:
                              store:
                                type: Git
                                spec:
                                  connectorRef: <+input>
                                  repoName: <+input>
                                  branch: <+input>
                                  folderPath: <+input>
                            moduleConfig:
                              path: <+input>
                        provisionerIdentifier: <+input>
            rollbackSteps: []
        tags: {}
        variables: []
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: Ignore
